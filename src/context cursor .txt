cursor context code
IN APP.JS
{
    // import cuersor context
    import { CursorContext } from './context/CursorContext';
    // import motion
    import {motion} from 'framer-motion';
    {/* return cursor */}
    const {cursorVariants, cursorBG} = useContext(CursorContext)
    <motion.div 
    variants={cursorVariants}
    animate={cursorBG}
    className='w-[32px] h-[32px] bg-primary fixed top-0 left-0 pointer-events-none z-50 rounded-full'>  
    </motion.div>

}
IN INDEX.JS{
    // import cursor context provider
    import CursorProvider from './context/CursorContext';
    WRAP
    <CursorProvider>
    <React.StrictMode>
      <App />
    </React.StrictMode>
  </CursorProvider>
}

IN HEADER.JS
{
    // import cursor context
    import {CursorContext} from '../context/CursorContext';
    const {mouseEnterHandler, mouseLeaveHandler} = useContext(CursorContext);
    <Link 
        onMouseEnter={mouseEnterHandler}
        onMouseLeave={mouseLeaveHandler}
}
IN SOCIALS.JS
{
    // import cursor context
    import {CursorContext} from '../context/CursorContext';
    const {mouseEnterHandler, mouseLeaveHandler} = useContext(CursorContext);
    <div 
    onMouseEnter={mouseEnterHandler}
    onMouseLeave={mouseLeaveHandler}
}
IN ABOUT.JS
{
    // cursor context
    import { CursorContext } from '../context/CursorContext';
    const {mouseEnterHandler, mouseLeaveHandler } = useContext(CursorContext);
     <div 
    onMouseEnter={mouseEnterHandler}
    onMouseLeave={mouseLeaveHandler}

}
IN HOME.JS
{
    // cursor context
import { CursorContext } from '../context/CursorContext';
  const {mouseEnterHandler, mouseLeaveHandler } = useContext(CursorContext);
   onMouseEnter={mouseEnterHandler}
  onMouseLeave={mouseLeaveHandler}

}
IN PORTFOLIO.JS
{
    // cursor context
import { CursorContext } from '../context/CursorContext';
const {mouseEnterHandler, mouseLeaveHandler } = useContext(CursorContext);
   onMouseEnter={mouseEnterHandler}
  onMouseLeave={mouseLeaveHandler}
}
IN CONTACTS.JS
{
    // cursor context
import { CursorContext } from '../context/CursorContext';
const {mouseEnterHandler, mouseLeaveHandler } = useContext(CursorContext);
   onMouseEnter={mouseEnterHandler}
  onMouseLeave={mouseLeaveHandler
}
IN CONTEXT.JS
{
    import React, {useState, useEffect, createContext} from 'react';

// create context
export const CursorContext = createContext();

const CursorProvider = ({children})=>{
  // cursor position state
  const [cursorPos, setCursorPos] = useState({
    x: 0,
    y: 0,
  });
  // cursor bg state
  const [cursorBG, setCursorBG] = useState('default');
  // MOBILE VIEW PORT
  const mobileViewportIsActive = window.innerWidth < 768;
  useEffect(()=>{
    console.log(mobileViewportIsActive);
    const move = (e)=>{ 
      setCursorPos({
        x: e.clientX,
        y: e.clientY,
      });
    };
    window.addEventListener("mousemove", move);
    // remove event
    return () => {
      window.removeEventListener("mousemove", move);
    };
  });

// cursor variants
const cursorVariants = {
  default:{
    x: cursorPos.x - 16,
    y: cursorPos.y - 16,
    backgroundColor: '#0e1112',
  },
  text: {
    width: '150px',
    height: '150px',
    x: cursorPos.x - 72,
    y: cursorPos.y - 72,
    backgroundColor: '#fff',
    mixBlendMode: 'difference',
  },
};

// mouse enter handler
const mouseEnterHandler = () =>{
  setCursorBG('text');
}
// mouse leave handler
const mouseLeaveHandler = () =>{
  setCursorBG('default');
}
  return (
  <CursorContext.Provider value={{cursorVariants, cursorBG, mouseEnterHandler, mouseLeaveHandler}}>
    {children}
  </CursorContext.Provider>);
};

export default CursorProvider;
}